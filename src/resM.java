/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author user
 */
public class resM extends javax.swing.JFrame {

    Connection c=null;
    ResultSet rs=null;
    ResultSet rs1=null;
    PreparedStatement pst=null;
    PreparedStatement pst1=null;
    String mgrID=null;
    String resID=null;
    
    /**
     * Creates new form resM
     */
    public resM() {
        initComponents();
    }
    
    public void close(){
    WindowEvent wclose=new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(wclose);
 }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mTableMenu = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        mMenuInsert = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        mTableOffer = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        mOfferInsert = new javax.swing.JButton();
        mShowMenu = new javax.swing.JButton();
        mShowOffer = new javax.swing.JButton();
        mMenuDelete = new javax.swing.JButton();
        mMenuDeleteResID = new javax.swing.JTextField();
        mOfferDelete = new javax.swing.JButton();
        mOfferDeleteOfferID = new javax.swing.JTextField();
        logout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("             Manager");

        mTableMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Menu ID", "Res ID", "Item", "Price", "Carbohydrate", "Protein", "Fat", "Minerals", "Vitamins"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mTableMenu.setColumnSelectionAllowed(true);
        mTableMenu.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(mTableMenu);
        mTableMenu.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel2.setText("MENU");

        mMenuInsert.setText("Insert");
        mMenuInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mMenuInsertActionPerformed(evt);
            }
        });

        mTableOffer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Offer ID", "Res ID", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(mTableOffer);

        jLabel3.setText("OFFERS");

        mOfferInsert.setText("Insert");
        mOfferInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mOfferInsertActionPerformed(evt);
            }
        });

        mShowMenu.setText("Show Menu");
        mShowMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mShowMenuActionPerformed(evt);
            }
        });

        mShowOffer.setText("Show Offer");
        mShowOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mShowOfferActionPerformed(evt);
            }
        });

        mMenuDelete.setText("Delete");
        mMenuDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mMenuDeleteActionPerformed(evt);
            }
        });

        mMenuDeleteResID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mMenuDeleteResIDActionPerformed(evt);
            }
        });

        mOfferDelete.setText("Delete");
        mOfferDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mOfferDeleteActionPerformed(evt);
            }
        });

        mOfferDeleteOfferID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mOfferDeleteOfferIDActionPerformed(evt);
            }
        });

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(179, 179, 179)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(mMenuInsert)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(mMenuDelete))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(24, 24, 24)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addGap(28, 28, 28))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(mShowMenu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mMenuDeleteResID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logout))
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mShowOffer)
                        .addGap(114, 114, 114)
                        .addComponent(mOfferInsert)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mOfferDelete)
                        .addGap(35, 35, 35)
                        .addComponent(mOfferDeleteOfferID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(logout))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(153, 153, 153)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mShowMenu)
                    .addComponent(mMenuInsert)
                    .addComponent(mMenuDelete)
                    .addComponent(mMenuDeleteResID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mShowOffer)
                    .addComponent(mOfferInsert)
                    .addComponent(mOfferDelete)
                    .addComponent(mOfferDeleteOfferID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(70, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(233, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mMenuInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mMenuInsertActionPerformed
        // TODO add your handling code here:
        close();
        mMenuInsert m=new mMenuInsert();
        m.setVisible(true);
    }//GEN-LAST:event_mMenuInsertActionPerformed

    private void mMenuDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mMenuDeleteActionPerformed
        // TODO add your handling code here:
        c=Connector.connect();
        try{
            
            String query= "delete from menu where menu_id=?";
            pst=c.prepareStatement(query);
            String resID=mMenuDeleteResID.getText();
            pst.setString(1, resID);
            
            pst.executeUpdate();
            
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Empty Field"+ex);
        }
        finally {
            try{
                pst.close();
                c.close();
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_mMenuDeleteActionPerformed

    private void mMenuDeleteResIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mMenuDeleteResIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mMenuDeleteResIDActionPerformed

    private void mShowMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mShowMenuActionPerformed
        // TODO add your handling code here:
        c=Connector.connect();
        try{
            String que="select * from manager where m_id=?";
            pst1=c.prepareStatement(que);
            pst1.setString(1, mgrID);
            rs1=pst1.executeQuery();
            String rID="";
            while(rs1.next()){
                rID=rs1.getString(1);
                resID=rID;
                break;
            }
            String query= "select * from menu where res_id=?";
            pst=c.prepareStatement(query);
            pst.setString(1, rID);
            rs=pst.executeQuery();
            mTableMenu.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Empty Field"+ex);
        }
        finally {
            try{
                pst.close();
                rs.close();
                c.close();
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
        }
        
    }//GEN-LAST:event_mShowMenuActionPerformed

    private void mShowOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mShowOfferActionPerformed
        // TODO add your handling code here:
        c=Connector.connect();
        try{
            
            String query= "select * from offer where res_id=?";
            pst=c.prepareStatement(query);
            pst.setString(1, resID);
            
            rs=pst.executeQuery();
            mTableOffer.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Empty Field"+ex);
        }
        finally {
            try{
                pst.close();
                rs.close();
                c.close();
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_mShowOfferActionPerformed

    private void mOfferDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mOfferDeleteActionPerformed
        // TODO add your handling code here:
        c=Connector.connect();
        try{
            
            String query= "delete from offer where offer_id=?";
            pst=c.prepareStatement(query);
            String offerID=mOfferDeleteOfferID.getText();
            pst.setString(1, offerID);
            
            pst.executeUpdate();
            
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Empty Field"+ex);
        }
        finally {
            try{
                pst.close();
                c.close();
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_mOfferDeleteActionPerformed

    private void mOfferDeleteOfferIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mOfferDeleteOfferIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mOfferDeleteOfferIDActionPerformed

    private void mOfferInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mOfferInsertActionPerformed
        // TODO add your handling code here:
        close();
        mMenuInsert m=new mMenuInsert();
        m.setVisible(true);
    }//GEN-LAST:event_mOfferInsertActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        close();
        front f=new front();
        f.setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(resM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(resM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(resM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(resM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new resM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton logout;
    private javax.swing.JButton mMenuDelete;
    private javax.swing.JTextField mMenuDeleteResID;
    private javax.swing.JButton mMenuInsert;
    private javax.swing.JButton mOfferDelete;
    private javax.swing.JTextField mOfferDeleteOfferID;
    private javax.swing.JButton mOfferInsert;
    private javax.swing.JButton mShowMenu;
    private javax.swing.JButton mShowOffer;
    private javax.swing.JTable mTableMenu;
    private javax.swing.JTable mTableOffer;
    // End of variables declaration//GEN-END:variables
}
